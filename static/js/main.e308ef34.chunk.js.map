{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","onClick","setMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","rows","backgroundColor","newText","toUpperCase","showAlert","disabled","length","toLowerCase","navigator","clipboard","writeText","split","filter","element","replace","Alert","word","height","alert","charAt","slice","message","defaultProps","aboutText","App","setAlert","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e308ef34.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n// import { Link } from \"react-router-dom\";\n\nexport default function Navbar(props) {\n  return (\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n      <div className=\"container-fluid\">\n        {/* <Link className=\"navbar-brand\" to=\"/\">\n          {props.title}\n        </Link> */}\n        <a className=\"navbar-brand\" href=\"#\">\n          {props.title}\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n            <li className=\"nav-item\">\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\n                Home\n              </Link> */}\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\n                Home\n              </a>\n            </li>\n            {/* <li>\n            <Link className=\"nav-link active\" aria-current=\"page\" to=\"/about\">\n                About Us\n              </Link>\n            </li> */}\n          </ul>\n          <div className={`form-check form-switch text-${props.mode === \"light\"? \"dark\":\"light\"}`}>\n            <input\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              role=\"switch\"\n              id=\"flexSwitchCheckDefault\"\n              onClick={props.setMode}\n            />\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\n              Dark Mode\n            </label>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nNavbar.propTypes = {\n  title: PropTypes.string.isRequired,\n  aboutText: PropTypes.string,\n};\n\nNavbar.defaultProps = {\n  title: \"My App\",\n  aboutText: \"About\",\n};\n","import React, { useState } from \"react\";\n\nexport default function TextForm(props) {\n  const [text, setText] = useState(\"\");\n\n  const textOnChange = (event) => {\n    setText(event.target.value);\n  };\n\n  const changeToUpperCase = () => {\n    let newText = text.toUpperCase();\n    setText(newText);\n    props.showAlert(\"Text changed to upper case \", \"success\");\n  };\n\n  const changeToLowerCase = () => {\n    let newText = text.toLowerCase();\n    setText(newText);\n    props.showAlert(\"Text changed to lower case \", \"success\");\n  };\n\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(text);\n    props.showAlert(\"Text coppied to clipboard\", \"success\");\n  };\n\n  const clearText = () => {\n    setText(\"\");\n  }\n\n  return (\n    <>\n      <div\n        className=\"container\"\n        style={{ color: props.mode === \"light\" ? \"black\" : \"white\" }}\n      >\n        <h2>{props.heading}</h2>\n        <div className=\"mb-3\">\n          <textarea\n            className=\"form-control\"\n            value={text}\n            onChange={textOnChange}\n            id=\"text\"\n            rows=\"7\"\n            style={{\n              backgroundColor: props.mode === \"light\" ? \"white\" : \"#042743\",\n              color: props.mode === \"light\" ? \"black\" : \"white\",\n            }}\n          ></textarea>\n        </div>\n        <button\n          className=\"btn btn-primary mx-1 my-1\"\n          onClick={changeToUpperCase}\n          disabled={text.length === 0}\n        >\n          Convert to Uppercase\n        </button>\n        <button\n          className=\"btn btn-primary mx-1 my-1\"\n          onClick={changeToLowerCase}\n          disabled={text.length === 0}\n        >\n          Convert to Lowercase\n        </button>\n        <button\n          className=\"btn btn-primary mx-1 my-1\"\n          onClick={copyToClipboard}\n          disabled={text.length === 0}\n        >\n          Copy to Clipboard\n        </button>\n        <button\n          className=\"btn btn-primary mx-1 my-1\"\n          onClick={clearText}\n          disabled={text.length === 0}\n        >\n          Clear Text\n        </button>\n\n\n        <div className=\"my-3\">\n          <h2>Your text summary </h2>\n          <p>\n            {\n              text.split(/\\s+/).filter((element) => {\n                return element.length !== 0;\n              }).length\n            }{\" \"}\n            words, {text.replace(/\\s/g, '').length} charachers\n          </p>\n          <p> {0.008 * text.split(\" \").length} Minutes Read</p>\n          <h3>Preview</h3>\n          <p>\n            {text.length > 0 ? text : \"Enter some text in above box to preview\"}\n          </p>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\n\nexport default function Alert(props) {\n\n  const toUCase = (word) => {\n      return word.charAt(0).toUpperCase() + word.slice(1)\n  }\n\n  return (\n    <div style={{height: '50px'}}>\n    { props.alert && <div className={`alert alert-${props.alert.type}`} role=\"alert\">\n     <strong> {toUCase(props.alert.type)} ! </strong> {props.alert.message} \n    </div>}\n    </div>\n  );\n}\n","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n// import About from \"./components/About\";\n\n\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\")\n  const [alert, setAlert] = useState(null)\n\n  const showAlert = (message, type) => {\n    setAlert({\n      message: message,\n      type: type,\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 2000);\n  }\n\n  const setToggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\"\n      showAlert(\"Dark mode has been enabled \", \"success\");\n      document.title = \"TextUtils - Dark Mode\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\"\n      document.title = \"TextUtils - Light Mode\";\n    }\n  };\n\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar setMode={setToggleMode} mode={mode} />\n      <Alert alert={alert} />\n      <div className=\"my-3\">\n        <TextForm heading=\"Enter text to analyze\" mode={mode} showAlert={showAlert}/>\n      {/* <Routes>\n          <Route path=\"/about\"  \n            element={<About />}\n          />\n          \n          <Route path=\"/\" \n            element={<TextForm heading=\"Enter text to analyze\" mode={mode} showAlert={showAlert}/>}\n          />\n      </Routes> */}\n      \n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}